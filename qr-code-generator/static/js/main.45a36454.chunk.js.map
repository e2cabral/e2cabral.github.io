{"version":3,"sources":["components/header/Header.tsx","components/layout/container/Container.tsx","components/layout/row/Row.tsx","components/layout/column/Column.tsx","components/qr-code/QrCode.tsx","models/enums/LevelEnum.ts","pages/qr-code-generator/QrCodeGenerator.tsx","routes/Router.tsx","App.tsx","index.tsx"],"names":["Header","className","Container","children","Row","Column","QrCode","props","value","bgColor","fgColor","size","level","renderAs","LevelEnum","this","H","Q","L","M","QrCodeGenerator","useState","setValue","setBgColor","setFgColor","setLevel","qrCodeString","useEffect","htmlFor","id","type","name","onChange","event","target","getAll","map","l","cols","rows","undefined","document","getElementsByTagName","outerHTML","readOnly","Router","path","exact","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45a36454.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <p className=\"header__logo\">\r\n                    <i className=\"icofont-qr-code\"></i>\r\n                    <span className=\"header__logoText\">\r\n                        QrCode <strong>Generator</strong>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                {/* TODO: implement a menu in the right side */}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nexport const Container: React.FC = ({ children }) => {\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            { children }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nexport const Row: React.FC = ({ children }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            { children }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nexport const Column: React.FC = ({ children }) => {\r\n    return (\r\n        <div className=\"column\">\r\n            { children }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport './index.css';\r\n\r\ninterface Props {\r\n    value: string;\r\n    bgColor: string;\r\n    fgColor: string;\r\n    size: number;\r\n    level: 'L' | 'M' | 'Q' | 'H';\r\n}\r\n\r\nexport const QrCode: React.FC<Props> = (props) => {\r\n    return (\r\n        <div className=\"qrcode\">\r\n            <QRCode\r\n                value={props.value}\r\n                bgColor={props.bgColor}\r\n                fgColor={props.fgColor}\r\n                size={props.size}\r\n                level={props.level}\r\n                renderAs=\"svg\"\r\n            />\r\n        </div>\r\n    );\r\n}","export abstract class LevelEnum {\r\n    static H: string = 'H';\r\n    static Q: string = 'Q';\r\n    static M: string = 'M';\r\n    static L: string = 'L';\r\n\r\n    static getAll(): Array<string> {\r\n        return [\r\n            this.H,\r\n            this.Q,\r\n            this.L,\r\n            this.M\r\n        ];\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Header } from '../../components/header/Header';\r\nimport { Container } from '../../components/layout/container/Container';\r\nimport { Row } from '../../components/layout/row/Row';\r\nimport { Column } from '../../components/layout/column/Column';\r\nimport { QrCode } from '../../components/qr-code/QrCode';\r\n\r\nimport { LevelEnum } from '../../models/enums/LevelEnum';\r\n\r\nexport const QrCodeGenerator = () => {\r\n    const [value, setValue] = useState<string> ('text');\r\n    const [bgColor, setBgColor] = useState<string> ('#ffffff');\r\n    const [fgColor, setFgColor] = useState<string> ('#000000');\r\n    const [size, setSize] = useState<number> (400);\r\n    const [level, setLevel] = useState<'L' | 'M' | 'Q' | 'H'> ('H');\r\n\r\n    let qrCodeString = '';\r\n\r\n    const renderHtml = () => {\r\n        if (document.getElementsByTagName('svg')[0] === undefined) {\r\n            return '<h1>Nothing to render</h1>'\r\n        } else {\r\n\r\n            qrCodeString = document.getElementsByTagName('svg')[0].outerHTML;\r\n            return qrCodeString;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [qrCodeString]);\r\n\r\n    return (\r\n        <div className=\"qrCodeGenerator\">\r\n            <Header />\r\n            <Container>\r\n                <Row>\r\n                    <Column>\r\n                        <QrCode\r\n                            value={value}\r\n                            bgColor={bgColor}\r\n                            fgColor={fgColor}\r\n                            size={size}\r\n                            level={level}\r\n                        />\r\n                    </Column>\r\n                    <Column>\r\n                        <div>\r\n                            <label htmlFor=\"value\">Digite o link que deseja inserir:</label>\r\n                            <input\r\n                                id=\"value\"\r\n                                type=\"text\"\r\n                                name=\"value\"\r\n                                onChange={(event) => setValue(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bgColor\">Selecione a cor de fundo:</label>\r\n                            <br/>\r\n                            <input\r\n                                id=\"bgColor\"\r\n                                type=\"color\"\r\n                                name=\"bgColor\"\r\n                                onChange={(event) => setBgColor(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"fgColor\">Selecione a cor dos gráficos:</label>\r\n                            <br/>\r\n                            <input\r\n                                id=\"fgColor\"\r\n                                type=\"color\"\r\n                                name=\"fgColor\"\r\n                                onChange={(event) => setFgColor(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"level\">Selecione a densidade dos gráficos:</label>\r\n                            <br/>\r\n                            <select name=\"level\" id=\"level\" onChange={(event) => setLevel(event.target.value as 'L' | 'M' | 'Q' | 'H')}>\r\n                                { LevelEnum.getAll().map((l) => <option value={l}>{ l }</option>) }\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <br/>\r\n                            <textarea name=\"code-format\" id=\"code-format\" className=\"code-generated\" cols={61} rows={19} value={renderHtml()} readOnly={true}></textarea>\r\n                        </div>\r\n                    </Column>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport { QrCodeGenerator } from '../pages/qr-code-generator/QrCodeGenerator';\r\n\r\nexport const Router = () => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Route path='/' exact component={QrCodeGenerator} />\r\n\t\t</BrowserRouter>\r\n\t);\r\n}","import React from 'react';\n\nimport { Router } from './routes/Router';\n\nimport './assets/css/global.css';\nimport './assets/css/icofont.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}